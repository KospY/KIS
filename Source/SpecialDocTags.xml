<!-- Special KSP tags help -->
<!-- v3, 06.18.2017 -->
<Tags>

<ConfigSetting>
  <summary-prefix><i>Config setting.</i></summary-prefix>
  <remarks>
  This value is managed by the KSP core. Its value is automatically read from the part's config.
  Despite of this field is declared as <i>public</i>, the other components must not be accessing it.
  The settings that are allowed for reading and/or writing should be exposed via a module's public
  property.
  </remarks>
  <include file="KSPAPI_HelpIndex.xml" path="//item[@name='T:KSPField']/*"/>
</ConfigSetting>

<PersistentConfigSetting>
  <summary-prefix><i>Persistent KSP field.</i></summary-prefix>
  <remarks>
  This value is managed by the KSP core. Its initial value is read from the part's config, and then
  the value is read from/written into the vessel's config. Despite of this field is declared as
  <i>public</i>, the other components must not be accessing it. The settings that are allowed for 
  reading and/or writing should be exposed via a module's public property.
  </remarks>
  <include file="KSPAPI_HelpIndex.xml" path="//item[@name='T:KSPField']/*"/>
</PersistentConfigSetting>

<UIConfigSetting>
  <summary-prefix><i>UI KSP field.</i></summary-prefix>
  <remarks>
  <para>
  This value is managed by the KSP core. Its initial value is read from the part's config. The value
  is presented in the part's context menu. Depending on the field's properties it can just show a
  value or allow changing it.
  </para>
  <para>
  Avoid accessing the properties of the fields from the other classes. Instead, the owner class
  should provide a related field object.
  </para>
  </remarks>
  <include file="KSPAPI_HelpIndex.xml" path="//item[@name='T:KSPField']/*"/>
  <include file="KSPAPI_HelpIndex.xml" path="//item[@name='T:BaseField']/*"/>
</UIConfigSetting>

<KspEvent>
  <summary-prefix><i>KSP event.</i></summary-prefix>
  <remarks>
  <para>
  The methods that are attributed as KSP events will show up in the part's context menu. Such
  methods must always be declared as <i>public</i> to let the KSP core correctly handling them. In
  case of the module class is not sealed, it highly encouraged to define the methods also as
  <i>virtual</i>.
  </para>
  <para>
  Avoid accessing the events from the other classes. Instead, the owner class should provide a
  related fields or methods.
  </para>
  </remarks>
  <include file="KSPAPI_HelpIndex.xml" path="//item[@name='T:KSPEvent']/*"/>
</KspEvent>

<PersistentField>
  <summary-prefix><i>Persistent field.</i></summary-prefix>
  <remarks>
  This value can be loaded or saved via a <c>ConfigAccessor</c> utility class.
  </remarks>
  <include file="KSPDevUtilsAPI_HelpIndex.xml" path="//item[@name='T:KSPDev.ConfigUtils.PersistentFieldAttribute']/*"/>
  <include file="KSPDevUtilsAPI_HelpIndex.xml" path="//item[@name='T:KSPDev.ConfigUtils.ConfigAccessor']/*"/>
</PersistentField>

</Tags>
